{"version":3,"sources":["components/Grid.jsx","components/header.jsx","components/Tab.jsx","components/Tabs.jsx","components/Content.jsx","components/ParticleCanvas.jsx","components/Button.jsx","components/Intro.jsx","App.js","serviceWorker.js","index.js","background.jpg"],"names":["ProjectGrid","Component","this","props","children","className","Tab","onClick","label","activeTab","Tabs","onClickTabItem","tab","setState","state","map","child","key","Content","id","Grid","ParticleCanvas","Fragment","width","height","params","particles","number","value","density","enable","value_area","color","shape","type","stroke","polygon","nb_sides","opacity","random","anim","speed","opacity_min","sync","size","size_min","line_linked","distance","move","direction","straight","out_mode","bounce","attract","rotateX","rotateY","interactivity","detect_on","events","onhover","mode","onclick","resize","modes","grab","bubble","duration","repulse","push","particles_nb","remove","retina_detect","Button","href","Intro","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"6OAiBeA,G,MCdMC,Y,6LDSbC,KADFC,MAASC,SAEX,OAAO,yBAAKC,UAAU,WAAf,gB,GATeJ,cE+BXK,E,2MAzBbC,QAAU,WAAO,IAAD,EACa,EAAKJ,MAAxBK,EADM,EACNA,OACRD,EAFc,EACCA,SACPC,I,wEAGA,IAEND,EAEEL,KAFFK,QAFK,EAIHL,KADFC,MAASM,EAHJ,EAGIA,UAAWD,EAHf,EAGeA,MAGlBH,EAAY,gBAMhB,OAJII,IAAcD,IAChBH,GAAa,oBAIb,wBAAIA,UAAWA,EAAWE,QAASA,GAChCC,O,GA1BSP,aCqDHS,E,YA9Cb,WAAYP,GAAQ,IAAD,8BACjB,4CAAMA,KAORQ,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAAEJ,UAAWG,KAN3B,EAAKE,MAAQ,CACXL,UAAW,EAAKN,MAAMC,SAAS,GAAGD,MAAMK,OAJzB,E,sEAYT,IAENG,EAGET,KAHFS,eACSP,EAEPF,KAFFC,MAASC,SACAK,EACPP,KADFY,MAASL,UAGX,OACE,yBAAKJ,UAAU,QACb,wBAAIA,UAAU,YACXD,EAASW,KAAI,SAACC,GAAW,IAChBR,EAAUQ,EAAMb,MAAhBK,MAER,OACE,kBAAC,EAAD,CACEC,UAAWA,EACXQ,IAAKT,EACLA,MAAOA,EACPD,QAASI,QAKjB,yBAAKN,UAAU,eACZD,EAASW,KAAI,SAACC,GACb,GAAIA,EAAMb,MAAMK,QAAUC,EAC1B,OAAOO,EAAMb,MAAMC,kB,GA3CZH,aCgBJiB,E,iLAdX,OACE,yBAAKC,GAAG,QAAQd,UAAU,mBACxB,kBAAC,EAAD,KACE,yBAAKG,MAAM,aACX,yBAAKA,MAAM,UAAX,wBACA,yBAAKA,MAAM,YACT,kBAACY,EAAD,a,GARUnB,a,yBCuIPoB,G,uLAtIX,OACE,kBAAC,IAAMC,SAAP,KACE,kBAAC,IAAD,CAEEC,MAAM,OACNC,OAAO,QACPC,OAAQ,CACNC,UAAW,CACTC,OAAQ,CACNC,MAAO,IACPC,QAAS,CACPC,QAAQ,EACRC,WAAY,MAGhBC,MAAO,CACLJ,MAAO,CACL,UACA,UACA,UACA,SACA,SACA,WAGJK,MAAO,CACLC,KAAM,SACNC,OAAQ,CACNZ,MAAO,EACPS,MAAO,WAETI,QAAS,CACPC,SAAU,EACVJ,MAAO,aAGXK,QAAS,CACPV,MAAO,GACPW,QAAQ,EACRC,KAAM,CACJV,QAAQ,EACRW,MAAO,EACPC,YAAa,GACbC,MAAM,IAGVC,KAAM,CACJhB,MAAO,EACPW,QAAQ,EACRC,KAAM,CACJV,QAAQ,EACRW,MAAO,IACPI,SAAU,GACVF,MAAM,IAGVG,YAAa,CACXhB,QAAQ,EACRiB,SAAU,IACVf,MAAO,CACLJ,MAAO,CACL,UACA,UACA,UACA,SACA,SACA,WAGJU,QAAS,GACTf,MAAO,GAETyB,KAAM,CACJlB,QAAQ,EACRW,MAAO,EACPQ,UAAW,OACXV,QAAQ,EACRW,UAAU,EACVC,SAAU,MACVC,QAAQ,EACRC,QAAS,CACPvB,QAAQ,EACRwB,QAAS,IACTC,QAAS,QAIfC,cAAe,CACbC,UAAW,SACXC,OAAQ,CACNC,QAAS,CACP7B,QAAQ,EACR8B,KAAM,QAERC,QAAS,CACP/B,QAAQ,EACR8B,KAAM,QAERE,QAAQ,GAEVC,MAAO,CACLC,KAAM,CACJjB,SAAU,IACVD,YAAa,CACXR,QAAS,IAGb2B,OAAQ,CACNlB,SAAU,IACVH,KAAM,GACNsB,SAAU,EACV5B,QAAS,GACTG,MAAO,GAET0B,QAAS,CACPpB,SAAU,IACVmB,SAAU,IAEZE,KAAM,CACJC,aAAc,GAEhBC,OAAQ,CACND,aAAc,KAIpBE,eAAe,U,GAhIEtE,cCsBduE,G,wLArBX,OACE,kBAAC,IAAMlD,SAAP,KACE,yBAAKjB,UAAU,WACb,yBAAKc,GAAG,kBACN,yBAAKd,UAAU,kBACb,yBAAKA,UAAU,YACb,uBACEA,UAAU,uCACVoE,KAAK,UAFP,uB,GARKxE,cCqBNyE,E,iLAlBX,OACE,kBAAC,IAAMpD,SAAP,KACE,yBAAKjB,UAAU,SACb,yBAAKA,UAAU,YACb,wBAAIA,UAAU,aAAd,eACA,wBAAIA,UAAU,YAAd,kCAEF,yBAAKA,UAAU,cACb,wBAAIA,UAAU,mBAAd,eACA,wBAAIA,UAAU,kBAAd,uBAEF,kBAAC,EAAD,Y,GAbUJ,aCuBL0E,MAff,WACE,OACE,yBAAKtE,UAAU,QACb,6BAASc,GAAG,OAAOd,UAAU,UAC3B,kBAAC,EAAD,MACA,kBAAC,EAAD,OAEF,kBAAC,EAAD,MACA,4BAAQA,UAAU,UAAlB,kDCRcuE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB,uHErInBC,EAAOC,QAAU,IAA0B,wC","file":"static/js/main.b8c2e00b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"../styles/projects.css\";\r\n\r\nclass ProjectGrid extends Component {\r\n  static propTypes = {\r\n    children: PropTypes.instanceOf(Array).isRequired,\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      props: { children },\r\n    } = this;\r\n    return <div className=\"wrapper\">return()</div>;\r\n  }\r\n}\r\n\r\nexport default ProjectGrid;\r\n","import React, { Component } from \"react\";\r\nimport \"../styles/header.css\";\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      scrolled: false,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    window.addEventListener(\"scroll\", () => {\r\n      const isTop = window.scrollY < 100;\r\n      if (isTop !== true) {\r\n        this.setState({ scrolled: true });\r\n      } else {\r\n        this.setState({ scrolled: false });\r\n      }\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"scroll  \");\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <nav className={this.state.scrolled ? \"flex scrolled\" : \"flex\"}>\r\n          <div className=\"link-wrap\">\r\n            <div className=\"page-link\" href=\"#home\">\r\n              Home\r\n            </div>\r\n            <div className=\"page-link\">About</div>\r\n            <div className=\"page-link\">Projects</div>\r\n            <div className=\"page-link\">Contact</div>\r\n          </div>\r\n        </nav>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Tab extends Component {\r\n  static propTypes = {\r\n    activeTab: PropTypes.string.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    onClick: PropTypes.func.isRequired,\r\n  };\r\n\r\n  onClick = () => {\r\n    const { label, onClick } = this.props;\r\n    onClick(label);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      onClick,\r\n      props: { activeTab, label },\r\n    } = this;\r\n\r\n    let className = \"tab-list-item\";\r\n\r\n    if (activeTab === label) {\r\n      className += \" tab-list-active\";\r\n    }\r\n\r\n    return (\r\n      <li className={className} onClick={onClick}>\r\n        {label}\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Tab;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"../styles/content.css\";\r\nimport Tab from \"./Tab\";\r\n\r\nclass Tabs extends Component {\r\n  static propTypes = {\r\n    children: PropTypes.instanceOf(Array).isRequired,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      activeTab: this.props.children[0].props.label,\r\n    };\r\n  }\r\n\r\n  onClickTabItem = (tab) => {\r\n    this.setState({ activeTab: tab });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      onClickTabItem,\r\n      props: { children },\r\n      state: { activeTab },\r\n    } = this;\r\n\r\n    return (\r\n      <div className=\"tabs\">\r\n        <ol className=\"tab-list\">\r\n          {children.map((child) => {\r\n            const { label } = child.props;\r\n\r\n            return (\r\n              <Tab\r\n                activeTab={activeTab}\r\n                key={label}\r\n                label={label}\r\n                onClick={onClickTabItem}\r\n              />\r\n            );\r\n          })}\r\n        </ol>\r\n        <div className=\"tab-content\">\r\n          {children.map((child) => {\r\n            if (child.props.label !== activeTab) return undefined;\r\n            return child.props.children;\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Tabs;\r\n","import React, { Component } from \"react\";\r\nimport \"../styles/content.css\";\r\nimport Grid from \"./Grid\";\r\nimport Tabs from \"./Tabs\";\r\n\r\nclass Content extends Component {\r\n  render() {\r\n    return (\r\n      <div id=\"about\" className=\"content_wrapper\">\r\n        <Tabs>\r\n          <div label=\"About Me\"></div>\r\n          <div label=\"Skills\">Skills? What skills?</div>\r\n          <div label=\"Projects\">\r\n            <Grid />\r\n          </div>\r\n        </Tabs>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Content;\r\n","import React, { Component } from \"react\";\r\nimport Particles from \"react-particles-js\";\r\nimport \"../styles/canvas.css\";\r\n\r\nclass ParticleCanvas extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Particles\r\n          // className=\"particles\"\r\n          width=\"98vw\"\r\n          height=\"100vh\"\r\n          params={{\r\n            particles: {\r\n              number: {\r\n                value: 120,\r\n                density: {\r\n                  enable: true,\r\n                  value_area: 800,\r\n                },\r\n              },\r\n              color: {\r\n                value: [\r\n                  \"#ff4141\",\r\n                  \"#D90E27\",\r\n                  \"#ff5a5a\",\r\n                  \"B80606\",\r\n                  \"F31010\",\r\n                  \"FF8F8F\",\r\n                ],\r\n              },\r\n              shape: {\r\n                type: \"circle\",\r\n                stroke: {\r\n                  width: 0,\r\n                  color: \"#000000\",\r\n                },\r\n                polygon: {\r\n                  nb_sides: 1,\r\n                  shape: \"triangle\",\r\n                },\r\n              },\r\n              opacity: {\r\n                value: 0.9,\r\n                random: false,\r\n                anim: {\r\n                  enable: false,\r\n                  speed: 1,\r\n                  opacity_min: 0.1,\r\n                  sync: false,\r\n                },\r\n              },\r\n              size: {\r\n                value: 5,\r\n                random: true,\r\n                anim: {\r\n                  enable: false,\r\n                  speed: 100,\r\n                  size_min: 0.1,\r\n                  sync: false,\r\n                },\r\n              },\r\n              line_linked: {\r\n                enable: true,\r\n                distance: 200,\r\n                color: {\r\n                  value: [\r\n                    \"#ff4141\",\r\n                    \"#D90E27\",\r\n                    \"#ff5a5a\",\r\n                    \"B80606\",\r\n                    \"F31010\",\r\n                    \"FF8F8F\",\r\n                  ],\r\n                },\r\n                opacity: 0.4,\r\n                width: 1,\r\n              },\r\n              move: {\r\n                enable: true,\r\n                speed: 1,\r\n                direction: \"none\",\r\n                random: true,\r\n                straight: false,\r\n                out_mode: \"out\",\r\n                bounce: false,\r\n                attract: {\r\n                  enable: true,\r\n                  rotateX: 600,\r\n                  rotateY: 1200,\r\n                },\r\n              },\r\n            },\r\n            interactivity: {\r\n              detect_on: \"canvas\",\r\n              events: {\r\n                onhover: {\r\n                  enable: true,\r\n                  mode: \"grab\",\r\n                },\r\n                onclick: {\r\n                  enable: true,\r\n                  mode: \"push\",\r\n                },\r\n                resize: true,\r\n              },\r\n              modes: {\r\n                grab: {\r\n                  distance: 300,\r\n                  line_linked: {\r\n                    opacity: 1,\r\n                  },\r\n                },\r\n                bubble: {\r\n                  distance: 800,\r\n                  size: 80,\r\n                  duration: 2,\r\n                  opacity: 0.8,\r\n                  speed: 3,\r\n                },\r\n                repulse: {\r\n                  distance: 400,\r\n                  duration: 0.4,\r\n                },\r\n                push: {\r\n                  particles_nb: 4,\r\n                },\r\n                remove: {\r\n                  particles_nb: 2,\r\n                },\r\n              },\r\n            },\r\n            retina_detect: true,\r\n          }}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ParticleCanvas;\r\n","import React, { Component } from \"react\";\r\nimport \"../styles/button.css\";\r\n\r\nclass Button extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"noTouch\">\r\n          <div id=\"section-header\">\r\n            <div className=\"Button_Wrapper\">\r\n              <div className=\"yesTouch\">\r\n                <a\r\n                  className=\"ButtonAnimation ButtonAnimation_Item\"\r\n                  href=\"#about\"\r\n                >\r\n                  LEARN MORE\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Button;\r\n","import React, { Component } from \"react\";\r\nimport \"../styles/canvas.css\";\r\nimport Button from \"./Button\";\r\n\r\nclass Intro extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"panel\">\r\n          <div className=\"mainText\">\r\n            <h1 className=\"mainIntro\">Ryan Gibson</h1>\r\n            <h3 className=\"subIntro\">Full-Stack Software Developer</h3>\r\n          </div>\r\n          <div className=\"mobileText\">\r\n            <h1 className=\"mainIntroMobile\">Ryan Gibson</h1>\r\n            <h3 className=\"subIntroMobile\">Software Developer</h3>\r\n          </div>\r\n          <Button></Button>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Intro;\r\n","import React from \"react\";\r\nimport logo from \"./background.jpg\";\r\nimport Header from \"./components/header\";\r\nimport Content from \"./components/Content\";\r\nimport \"../src/App.css\";\r\n// import \"./main.css\";\r\n// import { CanvasSpace, Pt, Group } from \"react-pts-canvas\";\r\nimport ParticleCanvas from \"./components/ParticleCanvas\";\r\nimport Intro from \"./components/Intro\";\r\n\r\nconst headerNames = [\"Home\", \"About\", \"Skills\", \"Projects\", \"Contact\"];\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"flex\">\r\n      <section id=\"home\" className=\"canvas\">\r\n        <ParticleCanvas></ParticleCanvas>\r\n        <Intro />\r\n      </section>\r\n      <Content></Content>\r\n      <footer className=\"footer\">\r\n        Website in active development by Ryan Gibson\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/background.3b8b00e0.jpg\";"],"sourceRoot":""}